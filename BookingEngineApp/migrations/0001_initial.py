# Generated by Django 4.2.7 on 2024-04-07 06:28

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Facility',
                'verbose_name_plural': 'Facilities',
            },
        ),
        migrations.CreateModel(
            name='RoomCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100, unique=True)),
                ('image', models.ImageField(upload_to='category_images/')),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Room Category',
                'verbose_name_plural': 'Room Categories',
            },
        ),
        migrations.CreateModel(
            name='UserRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('otp', models.CharField(max_length=4, null=True)),
                ('profile_picture', models.ImageField(blank=True, default='profile_images/defaultimage.png', null=True, upload_to='profile_images/')),
                ('total_bookings_rewards', models.IntegerField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('number', models.IntegerField(primary_key=True, serialize=False)),
                ('price', models.IntegerField()),
                ('name', models.CharField(max_length=100, unique=True)),
                ('image', models.ImageField(upload_to='rooms_images/')),
                ('sleeps', models.IntegerField()),
                ('credits_received', models.IntegerField()),
                ('credits_required', models.IntegerField()),
                ('facility', models.ManyToManyField(related_name='rooms', to='BookingEngineApp.facility')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='BookingEngineApp.roomcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100, unique=True)),
                ('overview', models.TextField()),
                ('days', models.IntegerField()),
                ('price', models.IntegerField()),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='BookingEngineApp.room')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in', models.DateField()),
                ('check_out', models.DateField()),
                ('adult', models.IntegerField(default=1)),
                ('children', models.IntegerField(default=0)),
                ('stay_duration', models.IntegerField()),
                ('occupancy', models.IntegerField(null=True)),
                ('total_price', models.IntegerField()),
                ('grand_total', models.IntegerField()),
                ('booking_rewards', models.IntegerField(default=0)),
                ('booking_credits', models.IntegerField(default=0)),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='BookingEngineApp.room')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='BookingEngineApp.package')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
